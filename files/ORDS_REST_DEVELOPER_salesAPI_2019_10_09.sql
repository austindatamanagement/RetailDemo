
-- Generated by ORDS REST Data Services 19.1.1.r1081514
-- Schema: DEVELOPER  Date: Wed Oct 09 08:02:19 2019 
--

BEGIN
  ORDS.ENABLE_SCHEMA(
      p_enabled             => TRUE,
      p_schema              => 'DEVELOPER',
      p_url_mapping_type    => 'BASE_PATH',
      p_url_mapping_pattern => 'DEVELOPER',
      p_auto_rest_auth      => FALSE);
    
  ORDS.DEFINE_MODULE(
      p_module_name    => 'salesAPI',
      p_base_path      => '/sales/',
      p_items_per_page => 100,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'salesAPI',
      p_pattern        => 'products/store/{store_id}',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'salesAPI',
      p_pattern        => 'products/store/{store_id}',
      p_method         => 'GET',
      p_source_type    => 'json/query',
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select PRED.STORE_ID,PRODUCTS.ID as ID,PRODUCTS.ITEM_NAME,PRODUCTS.TYPE as ITEM_TYPE,TO_CHAR(PRODUCTS.MSRP, ''$9,999.00'') AS Unitprice ,PRED.TOTAL_PRED ,PRED.CURRENTLY_AVAILABLE, (TOTAL_PRED - PRED.CURRENTLY_AVAILABLE) TO_BE_ORDERD , PRED.RISK_ITEMS
from OOW_DEMO_ITEMS PRODUCTS, ITEM_SOLD_PREDICTION_AND_AVAILABLE_NEXT_WEEK PRED
where PRODUCTS.ID=PRED.PRODUCT_ID and PRED.STORE_ID IN (:store_id)
group by PRODUCTS.ID,PRODUCTS.ITEM_NAME,PRODUCTS.TYPE,PRODUCTS.MSRP,PRED.STORE_ID,PRED.TOTAL_PRED,PRED.CURRENTLY_AVAILABLE, PRED.RISK_ITEMS
');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'salesAPI',
      p_pattern        => 'transactions',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'salesAPI',
      p_pattern        => 'transactions',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'begin
    INSERT INTO OOW_DEMO_SALES_HISTORY 
    (STORE_ID, PRODUCT_ID, QUANTITY,TRANSACTION_ID,ITEM_PRICE,DATE_OF_SALE)
    VALUES 
    (:STORE_ID, :PRODUCT_ID, :QUANTITY,:TRANSACTION_ID,:ITEM_PRICE,CURRENT_TIMESTAMP);
    :status := 200;
    :id := :TRANSACTION_ID;
exception
    when others then
        :status := 400;
end;    ');

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'salesAPI',
      p_pattern            => 'transactions',
      p_method             => 'POST',
      p_name               => 'id',
      p_bind_variable_name => 'id',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'salesAPI',
      p_pattern            => 'transactions',
      p_method             => 'POST',
      p_name               => 'TRANSACTION_ID',
      p_bind_variable_name => 'TRANSACTION_ID',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'salesAPI',
      p_pattern            => 'transactions',
      p_method             => 'POST',
      p_name               => 'ITEM_PRICE',
      p_bind_variable_name => 'ITEM_PRICE',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'salesAPI',
      p_pattern            => 'transactions',
      p_method             => 'POST',
      p_name               => 'STORE_ID',
      p_bind_variable_name => 'STORE_ID',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'salesAPI',
      p_pattern            => 'transactions',
      p_method             => 'POST',
      p_name               => 'PRODUCT_ID',
      p_bind_variable_name => 'PRODUCT_ID',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'salesAPI',
      p_pattern            => 'transactions',
      p_method             => 'POST',
      p_name               => 'QUANTITY',
      p_bind_variable_name => 'QUANTITY',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'salesAPI',
      p_pattern        => 'transactions',
      p_method         => 'GET',
      p_source_type    => 'json/query',
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select * from OOW_DEMO_SALES_HISTORY');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'salesAPI',
      p_pattern        => 'transactions/{id}',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'salesAPI',
      p_pattern        => 'transactions/{id}',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select * from OOW_DEMO_SALES_HISTORY where id = :id');

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'salesAPI',
      p_pattern        => 'transactions/{id}',
      p_method         => 'DELETE',
      p_source_type    => 'plsql/block',
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'begin
delete from OOW_DEMO_SALES_HISTORY where Id = :id;
  :transac_id := :id;
  :status := 200;
exception
    when others then
        :status := 400;
end;
');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'salesAPI',
      p_pattern        => 'stores/{region}',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'salesAPI',
      p_pattern        => 'stores/{region}',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select * from OOW_DEMO_STORES st JOIN OOW_DEMO_REGIONS r 
ON st.REGION_ID = r.ID where r.REGION_NAME = :region and st.STORE_TYPE =''Branch''');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'salesAPI',
      p_pattern        => 'product/urgency/{store_add}',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'salesAPI',
      p_pattern        => 'product/urgency/{store_add}',
      p_method         => 'GET',
      p_source_type    => 'json/query',
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select OOW_DEMO_STORES.STORE_ADDRESS,PRODUCTS.ID as PRODUCT_ID,PRODUCTS.ITEM_NAME,PRODUCTS.TYPE as ITEM_TYPE,TO_CHAR(PRODUCTS.MSRP, ''$9,999.00'') AS Unitprice ,PRED.TOTAL_PRED ,PRED.CURRENTLY_AVAILABLE, (TOTAL_PRED - PRED.CURRENTLY_AVAILABLE) TO_BE_ORDERD , PRED.RISK_ITEMS
from OOW_DEMO_ITEMS PRODUCTS, ITEM_SOLD_PREDICTION_AND_AVAILABLE_NEXT_WEEK PRED, OOW_DEMO_STORES
where PRODUCTS.ID=PRED.PRODUCT_ID and OOW_DEMO_STORES.ID=PRED.STORE_ID and OOW_DEMO_STORES.STORE_ADDRESS IN (:store_add)
group by PRODUCTS.ID,PRODUCTS.ITEM_NAME,PRODUCTS.TYPE,PRODUCTS.MSRP,OOW_DEMO_STORES.STORE_ADDRESS, PRED.TOTAL_PRED,PRED.CURRENTLY_AVAILABLE, PRED.RISK_ITEMS
order by TO_BE_ORDERD desc');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'salesAPI',
      p_pattern        => 'product/popular/{store_add}',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'salesAPI',
      p_pattern        => 'product/popular/{store_add}',
      p_method         => 'GET',
      p_source_type    => 'json/query',
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select OOW_DEMO_ITEMS.ITEM_NAME, sum(HIST.QUANTITY) as HIGHEST_SELL
from OOW_DEMO_SALES_HISTORY_ALL HIST, OOW_DEMO_ITEMS, OOW_DEMO_STORES
where OOW_DEMO_ITEMS.ID= HIST.PRODUCT_ID and OOW_DEMO_STORES.ID=HIST.STORE_ID and OOW_DEMO_STORES.STORE_ADDRESS IN (:store_add)
group by OOW_DEMO_ITEMS.ITEM_NAME
order by sum(HIST.QUANTITY) desc');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'salesAPI',
      p_pattern        => 'stores',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'salesAPI',
      p_pattern        => 'stores',
      p_method         => 'GET',
      p_source_type    => 'json/query',
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select * from OOW_DEMO_STORES where STORE_TYPE =''Branch''');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'salesAPI',
      p_pattern        => 'store/popular',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'salesAPI',
      p_pattern        => 'store/popular',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select OOW_DEMO_STORES.STORE_ADDRESS, TO_CHAR(sum(HIST.QUANTITY*HIST.ITEM_PRICE),''$9,999,999'') as SALES
from OOW_DEMO_STORES, OOW_DEMO_SALES_HISTORY_ALL HIST
where HIST.STORE_ID=OOW_DEMO_STORES.ID
group by OOW_DEMO_STORES.STORE_ADDRESS
order by SALES desc');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'salesAPI',
      p_pattern        => 'product/prediction/{region_name}',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'salesAPI',
      p_pattern        => 'product/prediction/{region_name}',
      p_method         => 'GET',
      p_source_type    => 'json/query',
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select REG.REGION_NAME,PRODUCTS.ID as ITEM_ID,PRODUCTS.ITEM_NAME,PRODUCTS.TYPE as ITEM_TYPE,SUM(PRED.TOTAL_PRED) as TOTAL_PRED,SUM(PRED.CURRENTLY_AVAILABLE) as CURRENTLY_AVAILABLE, SUM(TOTAL_PRED - PRED.CURRENTLY_AVAILABLE) TO_BE_ORDERD
from OOW_DEMO_ITEMS PRODUCTS, ITEM_SOLD_PREDICTION_AND_AVAILABLE_NEXT_WEEK PRED, OOW_DEMO_REGIONS REG, OOW_DEMO_STORES STORE
where PRODUCTS.ID=PRED.PRODUCT_ID and STORE.ID=PRED.STORE_ID and STORE.REGION_ID=REG.ID and REG.REGION_NAME =:region_name
group by REG.REGION_NAME,PRODUCTS.ID,PRODUCTS.ITEM_NAME,PRODUCTS.TYPE
');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'salesAPI',
      p_pattern        => 'store/popular/{region_name}',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'salesAPI',
      p_pattern        => 'store/popular/{region_name}',
      p_method         => 'GET',
      p_source_type    => 'json/query',
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select OOW_DEMO_STORES.STORE_ADDRESS, TO_CHAR(sum(HIST.QUANTITY*HIST.ITEM_PRICE),''$9,999,999'') as SALES
from OOW_DEMO_STORES, OOW_DEMO_SALES_HISTORY_ALL HIST, OOW_DEMO_REGIONS
where HIST.STORE_ID=OOW_DEMO_STORES.ID and OOW_DEMO_REGIONS.ID=OOW_DEMO_STORES.REGION_ID and OOW_DEMO_REGIONS.REGION_NAME IN (:region_name)
group by OOW_DEMO_STORES.STORE_ADDRESS
order by SALES desc');

  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'salesAPI',
      p_pattern        => 'products/store',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);

  ORDS.DEFINE_HANDLER(
      p_module_name    => 'salesAPI',
      p_pattern        => 'products/store',
      p_method         => 'GET',
      p_source_type    => 'json/query',
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select PRODUCTS.ITEM_NAME,PRODUCTS.TYPE as ITEM_TYPE ,sum(PRED.TOTAL_PRED) as TOTAL_PRED,sum(PRED.CURRENTLY_AVAILABLE) as CURRENTLY_AVAILABLE,TO_CHAR(PRODUCTS.MSRP, ''$9,999.00'') AS Unitprice ,(sum(PRED.TOTAL_PRED) - sum(PRED.CURRENTLY_AVAILABLE)) as TO_BE_ORDERD
from OOW_DEMO_ITEMS PRODUCTS, ITEM_SOLD_PREDICTION_AND_AVAILABLE_NEXT_WEEK PRED
where PRODUCTS.ID=PRED.PRODUCT_ID
group by PRODUCTS.ITEM_NAME,PRODUCTS.TYPE,PRODUCTS.MSRP');

    
        
COMMIT;

END;